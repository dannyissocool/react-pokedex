{"version":3,"sources":["components/PokemonCard.js","components/SearchBar.js","App.js","index.js"],"names":["PokemonCard","pokemon","setPokemon","onClick","className","src","id","alt","name","toUpperCase","substring","types","map","type","SearchBar","searchPokemon","error","setError","pokemonArray","goBack","useState","text","setText","onSubmit","e","preventDefault","placeholder","onChange","target","value","length","App","term","setTerm","setPokemonArray","loading","setLoading","getInitialPokemon","a","i","axios","get","then","res","data","useEffect","catch","err","console","log","getAPokemon","individual","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a53338b9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst PokemonCard = ({ pokemon, setPokemon }) => {\r\n  return (\r\n    \r\n      <div onClick={() => {setPokemon([pokemon])}} className='cursor-pointer max-w-full rounded overflow-hidden shadow-2xl'>\r\n        <img\r\n          src={`https://pokeres.bastionbot.org/images/pokemon/${pokemon.id}.png`}\r\n          alt=''\r\n          className='w-1/2 m-auto mt-4 '\r\n        />\r\n        <div className='px-6 py-4'>\r\n          <div className='font-bold text-xl mb-2 text-center'>\r\n            {pokemon.name[0].toUpperCase() + pokemon.name.substring(1)}\r\n          </div>\r\n          <p className='text-gray-100 text-base text-center bg-gray-800'>\r\n            ID: {pokemon.id}\r\n          </p>\r\n        </div>\r\n        <div className='px-6 pt-4 pb-2'>\r\n          {pokemon.types.map((type) => (\r\n            <span className='inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2'>\r\n              {type.type.name}\r\n            </span>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default PokemonCard;\r\n","import React, { useState } from 'react';\r\n\r\nconst SearchBar = ({ searchPokemon, error, setError, pokemonArray, goBack }) => {\r\n  const [text, setText] = useState('');\r\n  \r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!text) {\r\n      setError(true);\r\n      \r\n      return;\r\n    } else {\r\n      searchPokemon(text);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit}\r\n      className='shadow-md w-full max-w-sm m-auto my-10 bg-blue-100 text-blue-800 flex flex-col justify-center items-center '\r\n    >\r\n      <h1 className='text-center text-xl p-5'>\r\n        Search for a Pokemon or Pokedex ID\r\n      </h1>\r\n      <input\r\n        type='text'\r\n        className={`w-11/12 mx-auto mb-5 px-2 py-1 text-blue-800 border \r\n        ${error ? 'border-red-500 border-8' : 'border-blue-500 border-4'}`}\r\n        placeholder='Ex. Charizard or 6'\r\n        onChange={(e) => setText(e.target.value)}\r\n      />\r\n      \r\n      <button\r\n        type='submit'\r\n        className='w-full mx-auto px-3 py-1 bg-blue-500 text-blue-100'\r\n      >\r\n        Submit\r\n      </button>\r\n      {\r\n        pokemonArray.length === 1 ? \r\n        <button \r\n          className='w-full mx-auto px-3 py-1 border-2 border-blue-400  text-blue-400' \r\n          onClick={() => goBack()}\r\n        >\r\n            Go Back\r\n        </button> : ''\r\n      }\r\n\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\nimport PokemonCard from './components/PokemonCard';\r\nimport SearchBar from './components/SearchBar';\r\n\r\nfunction App() {\r\n  const [term, setTerm] = useState('1');\r\n  const [pokemonArray, setPokemonArray] = useState([]);  \r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n\r\n  // Initial API call\r\n  const pokemon_count = 151;\r\n  useEffect(() => getInitialPokemon()\r\n, []);\r\n\r\nasync function getInitialPokemon() {\r\n  setPokemonArray([]);\r\n  setError(false);\r\n\r\n  for (let i = 1; i <= pokemon_count; i++) {\r\n    await axios\r\n      .get(`https://pokeapi.co/api/v2/pokemon/${i}`)\r\n      .then(\r\n        (res) =>\r\n          setPokemonArray((pokemonArray) => [...pokemonArray, res.data]),\r\n        setLoading(false),\r\n        setError(false)\r\n      );\r\n  }\r\n\r\n  setLoading(false);\r\n}\r\n\r\n  // Search for single Pokemon\r\n  useEffect(() => {async function getAPokemon(term){\r\n    await axios\r\n      .get(`https://pokeapi.co/api/v2/pokemon/${term}`)\r\n      .then((res) => setPokemonArray(() => [res.data]),  setLoading(false), setError(false))\r\n      .catch((err) => {\r\n        console.log(err)\r\n        setError(true)\r\n      })\r\n  }\r\n    getAPokemon(term)\r\n  }, [term]);\r\n\r\n  return (\r\n    <div className='container mx-auto'>\r\n      <SearchBar goBack={getInitialPokemon} pokemonArray={pokemonArray} setError={setError} error={error} searchPokemon={(text) => setTerm(text)} />\r\n      {!loading && pokemonArray.length === 0 && (\r\n        <h1 className='text-center'>No Results</h1>\r\n      )}\r\n\r\n      {loading ? (\r\n        <h1 className='text-center'>Loading...</h1>\r\n      ) : pokemonArray.length === 1 ? (\r\n        <>\r\n        \r\n          <div className='grid sm:m-auto sm:grid-cols-1 sm:w-1/2'>\r\n            <PokemonCard pokemon={pokemonArray[0]} />\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div className='grid m-auto sm:grid-cols-1 md:grid-cols-3 lg:grid-cols-3 gap-4'>\r\n          {pokemonArray.map((individual) => (\r\n            <PokemonCard setPokemon={setPokemonArray} key={individual.id} pokemon={individual} />\r\n          ))}\r\n        </div>\r\n      )}\r\n      \r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}